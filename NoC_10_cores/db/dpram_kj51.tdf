--altdpram DEVICE_FAMILY="Cyclone II" INTENDED_DEVICE_FAMILY="Cyclone II" lpm_hint="RAM_BLOCK_TYPE=M4K" RAM_BLOCK_TYPE="M4K" RDCONTROL_ACLR="OFF" RDCONTROL_REG="UNREGISTERED" SUPPRESS_MEMORY_CONVERSION_WARNINGS="ON" USE_EAB="ON" WIDTH=32 WIDTHAD=7 data inclock outclock outclocken q rdaddress wraddress wren CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 CYCLONEII_M4K_COMPATIBILITY="ON" LOW_POWER_MODE="AUTO"
--VERSION_BEGIN 7.2 cbx_altdpram 2007:04:25:14:55:30:SJ cbx_altsyncram 2007:08:27:07:35:30:SJ cbx_cycloneii 2007:06:13:15:47:32:SJ cbx_lpm_add_sub 2007:08:06:16:01:34:SJ cbx_lpm_compare 2007:06:21:15:54:06:SJ cbx_lpm_decode 2007:03:12:19:01:52:SJ cbx_lpm_mux 2007:05:11:14:07:38:SJ cbx_mgl 2007:08:03:15:48:12:SJ cbx_stratix 2007:05:02:16:27:14:SJ cbx_stratixii 2007:06:28:17:26:26:SJ cbx_stratixiii 2007:06:28:17:15:56:SJ cbx_util_mgl 2007:06:01:06:37:30:SJ  VERSION_END


-- Copyright (C) 1991-2007 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION altsyncram_uql1 (address_a[6..0], address_b[6..0], clock0, clock1, clocken1, data_a[31..0], wren_a)
RETURNS ( q_b[31..0]);

--synthesis_resources = M4K 1 
SUBDESIGN dpram_kj51
( 
	data[31..0]	:	input;
	inclock	:	input;
	outclock	:	input;
	outclocken	:	input;
	q[31..0]	:	output;
	rdaddress[6..0]	:	input;
	wraddress[6..0]	:	input;
	wren	:	input;
) 
VARIABLE 
	altsyncram2 : altsyncram_uql1;

BEGIN 
	altsyncram2.address_a[] = wraddress[];
	altsyncram2.address_b[] = rdaddress[];
	altsyncram2.clock0 = inclock;
	altsyncram2.clock1 = outclock;
	altsyncram2.clocken1 = outclocken;
	altsyncram2.data_a[] = data[];
	altsyncram2.wren_a = wren;
	q[] = altsyncram2.q_b[];
END;
--VALID FILE
